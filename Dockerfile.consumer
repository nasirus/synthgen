# Use slim-bullseye as it's more stable and smaller than default slim
FROM python:3.12-slim-bullseye as builder

# Set environment variables to reduce Python bytecode generation and enable unbuffered output
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1

WORKDIR /app

# Copy only requirements first to leverage Docker cache
COPY consumer-requirements.txt .

# Install uv and create virtual environment
RUN pip install uv --no-cache-dir 
RUN uv venv /app/venv
ENV PATH="/app/venv/bin:$PATH"
RUN uv pip install --no-cache-dir -r consumer-requirements.txt
RUN rm -rf /root/.cache/pip /root/.cache/uv


# Start a new stage for a smaller final image
FROM python:3.12-slim-bullseye

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PYTHONPATH=/app/src \
    PATH="/app/venv/bin:$PATH"

WORKDIR /app

# Copy only the necessary files from builder
COPY --from=builder /app/venv /app/venv
COPY src/ /app/src/

# Create a non-root user for security
RUN useradd -m -u 1000 appuser && \
    chown -R appuser:appuser /app
USER appuser

# Use exec form of CMD
CMD ["python", "src/services/consumer.py"] 