services:
  rabbitmq:
    image: rabbitmq:4.0-management
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 1024M
    container_name: rabbitmq
    ports:
      - "5672:5672" # RabbitMQ default port
      - "15672:15672" # RabbitMQ management interface port
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 5
    env_file:
      - .env
    networks:
      - synthetic-data-network
    environment:
      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit consumer_timeout 3600000

  ui:
    image: nasirus/synthgen-ui:latest
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 512M
    container_name: ui
    ports:
      - "${UI_PORT:-3000}:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:${API_PORT:-8002}
    depends_on:
      api:
        condition: service_healthy
    networks:
      - synthetic-data-network

  api:
    image: nasirus/synthgen-api:latest
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 1024M
    container_name: api
    ports:
      - "${API_PORT:-8002}:8000"
    depends_on:
      rabbitmq:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
      minio:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/health || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 15s
    volumes:
      - ./src:/app/src
    env_file:
      - .env
    networks:
      - synthetic-data-network

  consumer:
    image: nasirus/synthgen-consumer:latest
    deploy:
      mode: replicated
      replicas: ${NUM_CONSUMERS:-1}
      resources:
        limits:
          cpus: "1"
          memory: 1024M
    container_name: consumer
    environment:
      - CONSUMER_ID=${CONSUMER_ID:-1}
    depends_on:
      rabbitmq:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    volumes:
      - ./src:/app/src
    env_file:
      - .env
    networks:
      - synthetic-data-network

  minio:
    image: quay.io/minio/minio:RELEASE.2025-02-07T23-21-09Z
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 1024M
    container_name: minio
    ports:
      - "9000:9000" # API port
      - "9001:9001" # Console port
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - synthetic-data-network

  worker:
    image: nasirus/synthgen-worker:latest
    deploy:
      mode: replicated
      replicas: ${NUM_WORKERS:-1}
      resources:
        limits:
          cpus: "1"
          memory: 1024M
    container_name: worker
    depends_on:
      rabbitmq:
        condition: service_healthy
      minio:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    volumes:
      - ./src:/app/src
    env_file:
      - .env
    networks:
      - synthetic-data-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.17.1
    container_name: es01
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 1024M
    ports:
      - "9200:9200"
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:9200 >/dev/null || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - synthetic-data-network

  litellm:
    image: ghcr.io/berriai/litellm:main-latest
    container_name: litellm
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 1024M
    ports:
      - "4000:4000"
    volumes:
      - ./litellm_config.yaml:/app/config.yaml
    command: --config /app/config.yaml --detailed_debug
    networks:
      - synthetic-data-network
    env_file:
      - .env

volumes:
  minio_data:
  elasticsearch_data:
  rabbitmq_data:

# Add networks configuration at the bottom of the file
networks:
  synthetic-data-network:
    driver: bridge
