apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}-ui"
  labels:
    app: "{{ .Release.Name }}-ui"
    app.kubernetes.io/name: "{{ .Release.Name }}-ui"
    app.kubernetes.io/instance: "{{ .Release.Name }}"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "{{ .Release.Name }}-ui"
  template:
    metadata:
      labels:
        app: "{{ .Release.Name }}-ui"
    spec:
      containers:
      - name: ui
        image: "{{ .Values.ui.image.repository }}:{{ .Values.ui.image.tag }}"
        imagePullPolicy: "{{ .Values.ui.image.pullPolicy }}"
        ports:
        - name: http
          containerPort: 3000
        resources:
          limits:
            cpu: "{{ .Values.ui.resources.limits.cpu }}"
            memory: "{{ .Values.ui.resources.limits.memory }}"
        env:
        - name: API_URL
          value: "{{ .Values.ui.env.API_URL }}"
        - name: API_PORT
          value: "{{ .Values.ui.env.API_PORT }}"
        - name: API_SECRET_KEY
          value: "{{ .Values.ui.env.API_SECRET_KEY }}"
# Note: In a real production environment, you might want to set this to the external URL
# such as "http://HOSTNAME:30081" (the NodePort)
---
apiVersion: v1
kind: Service
metadata:
  name: "{{ .Release.Name }}-ui"
  labels:
    app: "{{ .Release.Name }}-ui"
    app.kubernetes.io/name: "{{ .Release.Name }}-ui"
    app.kubernetes.io/instance: "{{ .Release.Name }}"
spec:
  type: "{{ .Values.ui.service.type }}"
  ports:
  - port: {{ .Values.ui.service.port }}
    targetPort: http
    protocol: TCP
    name: http
    {{- if eq .Values.ui.service.type "NodePort" }}
    nodePort: {{ .Values.ui.service.nodePort }}
    {{- end }}
  selector:
    app: "{{ .Release.Name }}-ui" 